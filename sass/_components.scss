/* Not necessarily meant to reusable in this project */

/* Logo */
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

/* Search Box */
.search {
    flex: 0 0 40%; /*no growing, no shrinking, but occupy 40% of parent element*/

    /*align search bar and icon*/
    display: flex;
    align-items: center; /*moves from stretch to center*/
    justify-content: center;
    
    &__input {
        font-family: inherit;  /*need this for input*/
        font-size: inherit;  /*this too*/
        color: inherit;  /*...and this*/
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px; /*high number so we have rounded edges*/
        margin-right: -3.25rem; /*doing this so button will move ontop of input*/

        width: 90%;
        transition: all .3s;


        &:focus {
            outline: none;
            width: 100%;  /*creates growing effect from 90% above*/
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder { /*only works in chrome and safari browsers*/
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }

    &__input:focus + &__button { /* + selects adjacent selector*/
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus{
            outline: none;
        }
        &:active{
            /*clicking button*/
            transform: translateY(2px);
        }
    }

    &__icon {
        height: 2rem; /*very easy to adjust svg*/
        width: 2rem;
        fill: var(--color-grey-light-3);  
    }
}

/* User Nav */
.user-nav {
    align-self: stretch; /*pulls entire nav bar to top and bottom of conatiner*/

    display: flex; /*very common to have flex item to be flex container*/
    align-items: center;

    & > *{ /*selections direct children even if they have different className's*/
        padding: 0 2rem;
        cursor: pointer;
        height: 100%; /*allows entire area to be controlled by hover*/
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box{
        display: flex;
        align-items: center;
        position: relative; /*controls __notification location*/
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;

        fill: var(--color-grey-dark-2); /*colors entire svg*/
    }

    &__notification {
        font-size: .8rem;
        height: var(--icon-height);
        width: var(--icon-width);
        border-radius: 50%;
        background-color: var(--color-primary);
        color: white;

        position: absolute;  /*needs parent of relative to go off of*/
        top: 1.5rem;
        right: 1.1rem;

        display: flex; /*setup for controlling numbers*/
        justify-content: center;
        align-items: center;
    }

    &__user{
        display: flex;
        align-items: center;
    }

    &__user-photo{
        height: 3.75rem;
        border-radius: 50%; /*creates circle*/
        margin-right: 1rem;
    }

    &__user-name{

    }
}


/* Side nav bar */
.side-nav{
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;
    &__item{
        position: relative;  /*needed for child pseudo element for positioning */

        &:not(:last-child){
            margin-bottom: 1rem;
        }
    }

    &__item::before {
        /*small line that becomes visible and heads to the right side*/
        content: ""; /*always need this*/
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        
        transform: scaleY(0); /*allows for growth in & direction before hover effect takes place*/
        transform-origin: bottom; /*overrides default from center*/
        transition: transform .3s,
                    width .2s .2s,
                    background-color .1s; /*could implement cubic-bezier here as well*/
    }

    &__item:hover::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before{
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited{
        color: var(--color-grey-light-1);
        text-decoration: none;  /*gets rid of list underline*/
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;

        display: flex;
        align-items: center;

        z-index: 10; /*allows text to be above slidding banner*/
        position: relative; /*need this for z-index*/
    }

    &__icon{
        height: var(--icon-height);
        width: var(--icon-width);
        margin-right: 2rem;
        fill: currentColor; /*color of parent element (link and visted pseudo elements) good browser support too, especially if hover effect is used on parent elements*/
    }
}

.about{
    font-size: 1.2rem;
    text-align: center;
    padding: 2.5rem;
    color: var(--color-grey-light-4);
}

/* Hotel gallery */
.gallery{
    display: flex;

    &__photo{
        /*In responsive, we want flexible images, so always use %*/
        width: 100%;
        display: block; /*should be block or inline-block to avoid white-space*/
    }
}


/* Hotel overview */
.overview {
    display: flex;
    align-items: center;
    border-bottom: 1px solid var(--color-grey-light-2);

    &__heading{
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;
    }

    &__stars {
        margin-right: auto; /*pushes all white space to right from this div but avoids occupying entire element incase of accidental hover*/
        display: flex;
    }

    &__icon-star,
    &__icon-location{
        height: var(--icon-height);
        width: var(--icon-width);
        fill: var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }

    &__icon-location{
        margin-right: .5rem;
    }
    
    &__rating {
        background-color: var(--color-primary);
        margin-left: 3rem;
        color: white;
        align-self: stretch;  /*overriding from the stretch above*/
        padding: 0 2.25rem;

        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
    }

    &__rating-average{
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;
    }

    &__rating-count{
        font-size: 1rem;
        text-transform: uppercase;
    }
}

/* Button */
.btn-inline{
    border: none;
    color: var(--color-primary);
    font-size: inherit; /*want this because we have varying button sizes on page*/
    border-bottom: 1px solid currentColor; /*this way border will have same color as text, good for when you have hover effect too like i do below*/
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;  /*helps make button a bit more modular*/
    cursor: pointer;
    transition: all .2s;

    &:hover {
        color: var(--color-grey-dark-1);
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }
    
    50% {
        transform: scale(1.15);
        box-shadow: 0 1rem 4rem rgba($color: #000000, $alpha: .25);
    }
    
    100% {
        transform: scale(1);
        box-shadow: none;
    }
}