/*
COLORS

Primary: #eb2f64
Primary light: #FF3366
Primary dark: #BA265D

Grey light 1: #faf9f9
Grey light 2: #f4f2f2
Grey light 3: #f0eeee
Grey light 4: #ccc

Grey dark 1: #333
Grey dark 2: #777
Grey dark 3: #999

*/
:root {
  /* Same as HTML but higher specificity - good for variables - global parent element */
  --color-primary: #eb2f64;
  /* -- signifies custom properties */
  --color-primary-light: #FF3366;
  --color-primary-dark: #BA265D;
  --color-grey-light-1: #faf9f9;
  --color-grey-light-2: #f4f2f2;
  --color-grey-light-3: #f0eeee;
  --color-grey-light-4: #ccc;
  --color-grey-dark-1: #333;
  --color-grey-dark-2: #777;
  --color-grey-dark-3: #999;
  --shadow-dark: box-shadow: 0 2rem 6rem rgba(0,0,0,.4);
  --shadow-light: 0 2rem 5rem rgba(0,0,0,.06);
  --icon-width: 1.75rem;
  --icon-height: 1.75rem;
  --line: 1px solid var(--color-grey-light-2); }

* {
  margin: 0;
  /* Global setup */
  padding: 0; }

*,
*::before,
*::after {
  box-sizing: inherit; }

html {
  box-sizing: border-box;
  font-size: 62.5%;
  /* 10px setup strategy for global font*/ }
  @media only screen and (max-width: 68.75em) {
    html {
      font-size: 50%; } }

body {
  font-family: 'Unbounded', sans-serif;
  font-weight: 400;
  line-height: 1.6;
  color: var(--color-grey-dark-2);
  background-image: linear-gradient(to right bottom, var(--color-primary-light), var(--color-primary-dark));
  background-size: cover;
  background-repeat: no-repeat;
  /* Fixes linear gradient banner repeat 'error' */
  min-height: 100vh; }

.container {
  max-width: 120rem;
  margin: 8rem auto;
  /*center trick for container inside parent element*/
  background-color: var(--color-grey-light-1);
  box-shadow: var(--shadow-dark);
  min-height: 50rem; }
  @media only screen and (max-width: 75em) {
    .container {
      margin: 0;
      max-width: 100%;
      width: 100%; } }

.header {
  font-size: 1.4rem;
  height: 7rem;
  background-color: white;
  border-bottom: 1px solid var(--color-grey-light-2);
  display: flex;
  /* main control for children elements */
  justify-content: space-between;
  /*make sure this goes in container when used*/
  align-items: center;
  /*this one too*/ }
  @media only screen and (max-width: 31.25em) {
    .header {
      flex-wrap: wrap;
      height: 11rem;
      align-content: space-around; } }

.content {
  display: flex;
  /*main flex container -> holds sidebar & hotel view side by side */ }
  @media only screen and (max-width: 56.75em) {
    .content {
      flex-direction: column; } }

.sidebar {
  background-color: var(--color-grey-dark-1);
  flex: 0 0 18%;
  /* no grow, no shrink, but % (which is why we don't want a shrink value)*/
  display: flex;
  flex-direction: column;
  /*overwrites row default*/
  justify-content: space-between;
  /*pushes about text to bottom of container*/ }

.hotel-view {
  background-color: white;
  flex: 1;
  /* Element to grow as much as it can */ }

/* Detail section */
.detail {
  font-size: 1.4rem;
  display: flex;
  /*we want description and user-reviews side by side*/
  padding: 4.5rem;
  background-color: var(--color-grey-light-1);
  border-bottom: 1px solid var(--color-grey-light-2);
  flex-direction: column; }
  @media only screen and (max-width: 56.75em) {
    .detail {
      padding: 3rem; } }

.description {
  background-color: white;
  box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.2);
  padding: 3rem;
  flex: 0 0 60%;
  /*grow 0, shrink 0, want it to take up 60% of space*/ }
  @media only screen and (max-width: 56.75em) {
    .description {
      padding: 2rem; } }
  @media only screen and (max-width: 37.5em) {
    .description {
      margin-right: 0;
      margin-bottom: 3rem; } }

.user-reviews {
  flex: 1;
  /*takes up remaining space*/
  display: flex;
  flex-direction: column;
  align-items: center; }

/* Not necessarily meant to reusable in this project */
/* Logo */
.logo {
  height: 3.25rem;
  margin-left: 2rem; }

/* Search Box */
.search {
  flex: 0 0 40%;
  /*no growing, no shrinking, but occupy 40% of parent element*/
  /*align search bar and icon*/
  display: flex;
  align-items: center;
  /*moves from stretch to center*/
  justify-content: center; }
  @media only screen and (max-width: 31.25em) {
    .search {
      order: 1;
      flex: 0 0 100%;
      background-color: var(--color-grey-light-2); } }
  .search__input {
    font-family: inherit;
    /*need this for input*/
    font-size: inherit;
    /*this too*/
    color: inherit;
    /*...and this*/
    background-color: var(--color-grey-light-2);
    border: none;
    padding: .7rem 2rem;
    border-radius: 100px;
    /*high number so we have rounded edges*/
    margin-right: -3.25rem;
    /*doing this so button will move ontop of input*/
    width: 90%;
    transition: all .3s; }
    .search__input:focus {
      outline: none;
      width: 100%;
      /*creates growing effect from 90% above*/
      background-color: var(--color-grey-light-3); }
    .search__input::-webkit-input-placeholder {
      /*only works in chrome and safari browsers*/
      font-weight: 100;
      color: var(--color-grey-light-4); }
  .search__input:focus + .search__button {
    /* + selects adjacent selector*/
    background-color: var(--color-grey-light-3); }
  .search__button {
    border: none;
    background-color: var(--color-grey-light-2); }
    .search__button:focus {
      outline: none; }
    .search__button:active {
      /*clicking button*/
      transform: translateY(2px); }
  .search__icon {
    height: 2rem;
    /*very easy to adjust svg*/
    width: 2rem;
    fill: var(--color-grey-light-3); }

/* User Nav */
.user-nav {
  align-self: stretch;
  /*pulls entire nav bar to top and bottom of conatiner*/
  display: flex;
  /*very common to have flex item to be flex container*/
  align-items: center; }
  .user-nav > * {
    /*selections direct children even if they have different className's*/
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
    /*allows entire area to be controlled by hover*/
    display: flex;
    align-items: center; }
  .user-nav > *:hover {
    background-color: var(--color-grey-light-2); }
  .user-nav__icon-box {
    position: relative;
    /*controls __notification location*/ }
  .user-nav__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
    /*colors entire svg*/ }
  .user-nav__notification {
    font-size: .8rem;
    height: var(--icon-height);
    width: var(--icon-width);
    border-radius: 50%;
    background-color: var(--color-primary);
    color: white;
    position: absolute;
    /*needs parent of relative to go off of*/
    top: 1.5rem;
    right: 1.1rem;
    display: flex;
    /*setup for controlling numbers*/
    justify-content: center;
    align-items: center; }
  .user-nav__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    /*creates circle*/
    margin-right: 1rem; }

/* Side nav bar */
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem; }
  @media only screen and (max-width: 56.75em) {
    .side-nav {
      display: flex;
      margin: 0; } }
  .side-nav__item {
    position: relative;
    /*needed for child pseudo element for positioning */ }
    .side-nav__item:not(:last-child) {
      margin-bottom: 1rem; }
      @media only screen and (max-width: 56.75em) {
        .side-nav__item:not(:last-child) {
          margin-bottom: 0; } }
    @media only screen and (max-width: 56.75em) {
      .side-nav__item {
        flex: 1; } }
  .side-nav__item::before {
    /*small line that becomes visible and heads to the right side*/
    content: "";
    /*always need this*/
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0);
    /*allows for growth in & direction before hover effect takes place*/
    transform-origin: bottom;
    /*overrides default from center*/
    transition: transform .3s, width .2s .2s, background-color .1s;
    /*could implement cubic-bezier here as well*/ }
  .side-nav__item:hover::before {
    transform: scaleY(1);
    width: 100%; }
  .side-nav__item:active::before {
    background-color: var(--color-primary-light); }
  .side-nav__link:link, .side-nav__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    /*gets rid of list underline*/
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;
    display: flex;
    align-items: center;
    z-index: 10;
    /*allows text to be above slidding banner*/
    position: relative;
    /*need this for z-index*/ }
    @media only screen and (max-width: 56.75em) {
      .side-nav__link:link, .side-nav__link:visited {
        justify-content: center;
        padding: 2rem; } }
    @media only screen and (max-width: 37.5em) {
      .side-nav__link:link, .side-nav__link:visited {
        flex-direction: column;
        padding: 1.75rem .5rem; } }
  .side-nav__icon {
    height: var(--icon-height);
    width: var(--icon-width);
    margin-right: 2rem;
    fill: currentColor;
    /*color of parent element (link and visted pseudo elements) good browser support too, especially if hover effect is used on parent elements*/ }
    @media only screen and (max-width: 37.5em) {
      .side-nav__icon {
        margin-right: 0;
        margin-bottom: .7rem;
        width: 1.5rem;
        height: 1.5rem; } }

.about {
  font-size: 1.2rem;
  text-align: center;
  padding: 2.5rem;
  color: var(--color-grey-light-4); }
  @media only screen and (max-width: 56.75em) {
    .about {
      display: none; } }

/* Hotel gallery */
.gallery {
  display: flex; }
  .gallery__photo {
    /*In responsive, we want flexible images, so always use %*/
    width: 100%;
    display: block;
    /*should be block or inline-block to avoid white-space*/ }

/* Hotel overview */
.overview {
  display: flex;
  align-items: center;
  border-bottom: 1px solid var(--color-grey-light-2); }
  .overview__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem; }
    @media only screen and (max-width: 37.5em) {
      .overview__heading {
        font-size: 1.8rem;
        padding: 1.25rem 2rem; } }
  .overview__stars {
    margin-right: auto;
    /*pushes all white space to right from this div but avoids occupying entire element incase of accidental hover*/
    display: flex; }
  .overview__icon-star, .overview__icon-location {
    height: var(--icon-height);
    width: var(--icon-width);
    fill: var(--color-primary); }
  .overview__location {
    font-size: 1.2rem;
    display: flex;
    vertical-align: center; }
  .overview__icon-location {
    margin-right: .5rem; }
  .overview__rating {
    background-color: var(--color-primary);
    margin-left: 3rem;
    color: white;
    align-self: stretch;
    /*overriding from the stretch above*/
    padding: 0 2.25rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center; }
    @media only screen and (max-width: 37.5em) {
      .overview__rating {
        padding: 0 1.5rem; } }
  .overview__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px; }
    @media only screen and (max-width: 37.5em) {
      .overview__rating-average {
        font-size: 1.8rem; } }
  .overview__rating-count {
    font-size: 1.1rem;
    text-transform: uppercase; }
    @media only screen and (max-width: 37.5em) {
      .overview__rating-count {
        font-size: 1.3rem; } }

/* Button */
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  /*want this because we have varying button sizes on page*/
  border-bottom: 1px solid currentColor;
  /*this way border will have same color as text, good for when you have hover effect too like i do below*/
  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;
  /*helps make button a bit more modular*/
  cursor: pointer;
  transition: all .2s; }
  .btn-inline span {
    margin-left: 3px;
    transition: margin-left .2s; }
  .btn-inline:hover {
    color: var(--color-grey-dark-1); }
    .btn-inline:hover span {
      margin-left: 8px; }
  .btn-inline:focus {
    outline: none;
    animation: pulsate 1s infinite; }

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none; }
  50% {
    transform: scale(1.15);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25); }
  100% {
    transform: scale(1);
    box-shadow: none; } }

/* Paragraph */
.paragraph:not(:last-of-type) {
  /*two paragraphs -> so 1 paragraph pulled here -> last-of-type*/
  margin-bottom: 2rem; }

/* List */
.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);
  display: flex;
  flex-wrap: wrap; }
  .list__item {
    flex: 0 0 50%;
    /*don't grow, dont shrink, give us two elements side by side*/
    margin-bottom: .7rem; }
  .list__item::before {
    /* before each item element, place a pseudo element*/
    /*Cannot change color if you do this...directly..need masks*/
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: .7rem;
    /* Mask defines an area where we can define an element and look through it */
    /* we will look through mask and cover everything else */
    background-image: url(../img/chevron-thin-right.svg);
    background-size: cover; }
    @supports (-webkit-mask-image: url()) or (mask-image: url()) {
      .list__item::before {
        background-color: var(--color-primary);
        -webkit-mask-image: url(../img/chevron-thin-right.svg);
        -webkit-mask-size: cover;
        mask-image: url(../img/chevron-thin-right.svg);
        mask-size: cover;
        background-image: none; } }

/* Recommend Area */
.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);
  display: flex;
  align-items: center; }
  .recommend__photo {
    box-sizing: content-box;
    /*includes border into height and width*/
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid white; }
    .recommend__photo:not(:last-child) {
      margin-right: -2rem; }
  .recommend__count {
    margin-right: auto;
    /*trick to push right space to the right without making div active when hovered*/ }
  .recommend__friends {
    display: flex; }

/* Reivews */
.review {
  background-color: white;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  margin: 3.5rem auto;
  position: relative;
  overflow: hidden; }
  @media only screen and (max-width: 56.75em) {
    .review {
      padding: 2rem;
      margin-bottom: 3rem; } }
  .review__text {
    margin-bottom: 2rem; }
  .review__user {
    display: flex;
    align-items: center; }
  .review__photo {
    height: 4.5rem;
    width: 4.5rem;
    border-radius: 50%;
    margin-right: 1.5rem; }
  .review__user-box {
    margin-right: auto; }
  .review__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: .4rem; }
  .review__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3); }
  .review__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 300; }

/* Booking section */
.cta {
  padding: 3.5rem 0;
  text-align: center; }
  @media only screen and (max-width: 56.75em) {
    .cta {
      padding: 2.5rem 0; } }
  .cta__book-now {
    font-size: 2rem;
    text-transform: uppercase;
    font-weight: 300;
    margin-bottom: 2.5rem; }

/* Button */
.btn {
  font-size: 1.5rem;
  font-weight: 300;
  text-transform: uppercase;
  border-radius: 100px;
  border: none;
  background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
  color: #fff;
  position: relative;
  overflow: hidden;
  /*if we do this, it'll disappear into 'background'*/
  cursor: pointer; }
  .btn > * {
    /*remember selections all child elements*/
    display: inline-block;
    /* do this so we can use padding */
    height: 100%;
    width: 100%;
    transition: all .2s; }
  .btn__visible {
    padding: 2rem 7.5rem; }
  .btn__invisible {
    position: absolute;
    left: 0;
    top: -100%;
    padding: 2rem 0;
    /*same as visible above*/ }
  .btn:hover {
    background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark)); }
  .btn:hover .btn__visible {
    transform: translateY(100%);
    /*not using top because not absolute position*/ }
  .btn:hover .btn__invisible {
    top: 0;
    /*inverse of 100% above*/ }
  .btn:focus {
    /*same thing as button before */
    outline: none;
    animation: pulsate 1s infinite;
    /*can pull animation that we already coded*/ }
